{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usher\\\\Desktop\\\\chat\\\\ChatApplication\\\\react-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, IconButton } from '@material-ui/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [stompClient, setStompClient] = useState(null);\n  useEffect(() => {\n    const socket = new SockJS('http://localhost:8080/ws');\n    const client = Stomp.over(socket);\n    client.connect({}, () => {\n      client.subscribe('/topic/messages', message => {\n        const receivedMessage = JSON.parse(message.body);\n        setMessages([...messages, receivedMessage]);\n      });\n    });\n    setStompClient(client);\n    return () => {\n      client.disconnect();\n    };\n  }, [messages]);\n\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const sendMessage = () => {\n    if (message.trim()) {\n      const chatMessage = {\n        content: message\n      };\n      stompClient.send('/app/chat', {}, JSON.stringify(chatMessage));\n      setMessage('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"Type a message\",\n      value: message,\n      onChange: handleMessageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: sendMessage,\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jYc+ZzscFLszFEEYW1CbAzuXzjI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/usher/Desktop/chat/ChatApplication/react-client/src/App.js"],"names":["React","useState","useEffect","TextField","IconButton","Stomp","SockJS","App","messages","setMessages","message","setMessage","stompClient","setStompClient","socket","client","over","connect","subscribe","receivedMessage","JSON","parse","body","disconnect","handleMessageChange","event","target","value","sendMessage","trim","chatMessage","content","send","stringify","map","msg","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,MAAM,GAAG,IAAIR,MAAJ,CAAW,0BAAX,CAAf;AACA,UAAMS,MAAM,GAAGV,KAAK,CAACW,IAAN,CAAWF,MAAX,CAAf;AAEAC,IAAAA,MAAM,CAACE,OAAP,CAAe,EAAf,EAAmB,MAAM;AACvBF,MAAAA,MAAM,CAACG,SAAP,CAAiB,iBAAjB,EAAqCR,OAAD,IAAa;AAC/C,cAAMS,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWX,OAAO,CAACY,IAAnB,CAAxB;AACAb,QAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcW,eAAd,CAAD,CAAX;AACD,OAHD;AAID,KALD;AAOAN,IAAAA,cAAc,CAACE,MAAD,CAAd;AAEA,WAAO,MAAM;AACXA,MAAAA,MAAM,CAACQ,UAAP;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACf,QAAD,CAhBM,CAAT;;AAkBA,QAAMgB,mBAAmB,GAAIC,KAAD,IAAW;AACrCd,IAAAA,UAAU,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIlB,OAAO,CAACmB,IAAR,EAAJ,EAAoB;AAClB,YAAMC,WAAW,GAAG;AAClBC,QAAAA,OAAO,EAAErB;AADS,OAApB;AAIAE,MAAAA,WAAW,CAACoB,IAAZ,CAAiB,WAAjB,EAA8B,EAA9B,EAAkCZ,IAAI,CAACa,SAAL,CAAeH,WAAf,CAAlC;AACAnB,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GATD;;AAWA,sBACE;AAAA,4BACE;AAAA,gBACGH,QAAQ,CAAC0B,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,kBACZ;AAAA,kBACGD,GAAG,CAACJ;AADP,SAASK,KAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,gBADd;AAEE,MAAA,KAAK,EAAE1B,OAFT;AAGE,MAAA,QAAQ,EAAEc;AAHZ;AAAA;AAAA;AAAA;AAAA,YARF,eAaE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEI,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzDD;;GAAMrB,G;;KAAAA,G;AA2DN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, IconButton } from '@material-ui/core';\r\n\r\nimport Stomp from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [stompClient, setStompClient] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = new SockJS('http://localhost:8080/ws');\r\n    const client = Stomp.over(socket);\r\n\r\n    client.connect({}, () => {\r\n      client.subscribe('/topic/messages', (message) => {\r\n        const receivedMessage = JSON.parse(message.body);\r\n        setMessages([...messages, receivedMessage]);\r\n      });\r\n    });\r\n\r\n    setStompClient(client);\r\n\r\n    return () => {\r\n      client.disconnect();\r\n    };\r\n  }, [messages]);\r\n\r\n  const handleMessageChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      const chatMessage = {\r\n        content: message\r\n      };\r\n\r\n      stompClient.send('/app/chat', {}, JSON.stringify(chatMessage));\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {messages.map((msg, index) => (\r\n          <li key={index}>\r\n            {msg.content}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <TextField\r\n        placeholder=\"Type a message\"\r\n        value={message}\r\n        onChange={handleMessageChange}\r\n      />\r\n      <IconButton onClick={sendMessage}>\r\n        send\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}