{"ast":null,"code":"// Generated by CoffeeScript 1.7.1\n\n/*\n   Stomp Over WebSocket http://www.jmesnil.net/stomp-websocket/doc/ | Apache License V2.0\n\n   Copyright (C) 2013 [Jeff Mesnil](http://jmesnil.net/)\n */\n(function () {\n  var Stomp, net, overTCP, overWS, wrapTCP, wrapWS;\n  Stomp = require('./stomp');\n  net = require('net');\n\n  Stomp.Stomp.setInterval = function (interval, f) {\n    return setInterval(f, interval);\n  };\n\n  Stomp.Stomp.clearInterval = function (id) {\n    return clearInterval(id);\n  };\n\n  wrapTCP = function (port, host) {\n    var socket, ws;\n    socket = null;\n    ws = {\n      url: 'tcp:// ' + host + ':' + port,\n      send: function (d) {\n        return socket.write(d);\n      },\n      close: function () {\n        return socket.end();\n      }\n    };\n    socket = net.connect(port, host, function (e) {\n      return ws.onopen();\n    });\n    socket.on('error', function (e) {\n      return typeof ws.onclose === \"function\" ? ws.onclose(e) : void 0;\n    });\n    socket.on('close', function (e) {\n      return typeof ws.onclose === \"function\" ? ws.onclose(e) : void 0;\n    });\n    socket.on('data', function (data) {\n      var event;\n      event = {\n        'data': data.toString()\n      };\n      return ws.onmessage(event);\n    });\n    return ws;\n  };\n\n  wrapWS = function (url) {\n    var WebSocketClient, connection, socket, ws;\n    WebSocketClient = require('websocket').client;\n    connection = null;\n    ws = {\n      url: url,\n      send: function (d) {\n        return connection.sendUTF(d);\n      },\n      close: function () {\n        return connection.close();\n      }\n    };\n    socket = new WebSocketClient();\n    socket.on('connect', function (conn) {\n      connection = conn;\n      ws.onopen();\n      connection.on('error', function (error) {\n        return typeof ws.onclose === \"function\" ? ws.onclose(error) : void 0;\n      });\n      connection.on('close', function () {\n        return typeof ws.onclose === \"function\" ? ws.onclose() : void 0;\n      });\n      return connection.on('message', function (message) {\n        var event;\n\n        if (message.type === 'utf8') {\n          event = {\n            'data': message.utf8Data\n          };\n          return ws.onmessage(event);\n        }\n      });\n    });\n    socket.connect(url);\n    return ws;\n  };\n\n  overTCP = function (host, port) {\n    var socket;\n    socket = wrapTCP(port, host);\n    return Stomp.Stomp.over(socket);\n  };\n\n  overWS = function (url) {\n    var socket;\n    socket = wrapWS(url);\n    return Stomp.Stomp.over(socket);\n  };\n\n  exports.overTCP = overTCP;\n  exports.overWS = overWS;\n}).call(this);","map":{"version":3,"sources":["C:/Users/usher/Desktop/chat/ChatApplication/react-client/node_modules/stompjs/lib/stomp-node.js"],"names":["Stomp","net","overTCP","overWS","wrapTCP","wrapWS","require","setInterval","interval","f","clearInterval","id","port","host","socket","ws","url","send","d","write","close","end","connect","e","onopen","on","onclose","data","event","toString","onmessage","WebSocketClient","connection","client","sendUTF","conn","error","message","type","utf8Data","over","exports","call"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.7.1\n\n/*\n   Stomp Over WebSocket http://www.jmesnil.net/stomp-websocket/doc/ | Apache License V2.0\n\n   Copyright (C) 2013 [Jeff Mesnil](http://jmesnil.net/)\n */\n\n(function() {\n  var Stomp, net, overTCP, overWS, wrapTCP, wrapWS;\n\n  Stomp = require('./stomp');\n\n  net = require('net');\n\n  Stomp.Stomp.setInterval = function(interval, f) {\n    return setInterval(f, interval);\n  };\n\n  Stomp.Stomp.clearInterval = function(id) {\n    return clearInterval(id);\n  };\n\n  wrapTCP = function(port, host) {\n    var socket, ws;\n    socket = null;\n    ws = {\n      url: 'tcp:// ' + host + ':' + port,\n      send: function(d) {\n        return socket.write(d);\n      },\n      close: function() {\n        return socket.end();\n      }\n    };\n    socket = net.connect(port, host, function(e) {\n      return ws.onopen();\n    });\n    socket.on('error', function(e) {\n      return typeof ws.onclose === \"function\" ? ws.onclose(e) : void 0;\n    });\n    socket.on('close', function(e) {\n      return typeof ws.onclose === \"function\" ? ws.onclose(e) : void 0;\n    });\n    socket.on('data', function(data) {\n      var event;\n      event = {\n        'data': data.toString()\n      };\n      return ws.onmessage(event);\n    });\n    return ws;\n  };\n\n  wrapWS = function(url) {\n    var WebSocketClient, connection, socket, ws;\n    WebSocketClient = require('websocket').client;\n    connection = null;\n    ws = {\n      url: url,\n      send: function(d) {\n        return connection.sendUTF(d);\n      },\n      close: function() {\n        return connection.close();\n      }\n    };\n    socket = new WebSocketClient();\n    socket.on('connect', function(conn) {\n      connection = conn;\n      ws.onopen();\n      connection.on('error', function(error) {\n        return typeof ws.onclose === \"function\" ? ws.onclose(error) : void 0;\n      });\n      connection.on('close', function() {\n        return typeof ws.onclose === \"function\" ? ws.onclose() : void 0;\n      });\n      return connection.on('message', function(message) {\n        var event;\n        if (message.type === 'utf8') {\n          event = {\n            'data': message.utf8Data\n          };\n          return ws.onmessage(event);\n        }\n      });\n    });\n    socket.connect(url);\n    return ws;\n  };\n\n  overTCP = function(host, port) {\n    var socket;\n    socket = wrapTCP(port, host);\n    return Stomp.Stomp.over(socket);\n  };\n\n  overWS = function(url) {\n    var socket;\n    socket = wrapWS(url);\n    return Stomp.Stomp.over(socket);\n  };\n\n  exports.overTCP = overTCP;\n\n  exports.overWS = overWS;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}