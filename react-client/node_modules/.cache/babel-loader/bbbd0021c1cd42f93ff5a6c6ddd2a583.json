{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectScrollType = detectScrollType;\nexports.getNormalizedScrollLeft = getNormalizedScrollLeft; // Source from https://github.com/alitaheri/normalize-scroll-left\n\nvar cachedType;\n/**\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n *\n * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.\n *\n * Type             | <- Most Left | Most Right -> | Initial\n * ---------------- | ------------ | ------------- | -------\n * default          | 0            | 100           | 100\n * negative (spec*) | -100         | 0             | 0\n * reverse          | 100          | 0             | 0\n *\n * Edge 85: default\n * Safari 14: negative\n * Chrome 85: negative\n * Firefox 81: negative\n * IE 11: reverse\n *\n * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll\n */\n\nfunction detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n\n  var dummy = document.createElement('div');\n  var container = document.createElement('div');\n  container.style.width = '10px';\n  container.style.height = '1px';\n  dummy.appendChild(container);\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n\n  document.body.removeChild(dummy);\n  return cachedType;\n} // Based on https://stackoverflow.com/a/24394376\n\n\nfunction getNormalizedScrollLeft(element, direction) {\n  var scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n\n  var type = detectScrollType();\n\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n\n    default:\n      return scrollLeft;\n  }\n}","map":{"version":3,"sources":["C:/Users/usher/Desktop/chat/ChatApplication/react-client/node_modules/@material-ui/core/utils/scrollLeft.js"],"names":["Object","defineProperty","exports","value","detectScrollType","getNormalizedScrollLeft","cachedType","dummy","document","createElement","container","style","width","height","appendChild","dir","fontSize","position","top","overflow","body","scrollLeft","removeChild","element","direction","type","scrollWidth","clientWidth"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B;AACAF,OAAO,CAACG,uBAAR,GAAkCA,uBAAlC,C,CACA;;AACA,IAAIC,UAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASF,gBAAT,GAA4B;AAC1B,MAAIE,UAAJ,EAAgB;AACd,WAAOA,UAAP;AACD;;AAED,MAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACA,MAAIC,SAAS,GAAGF,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACAC,EAAAA,SAAS,CAACC,KAAV,CAAgBC,KAAhB,GAAwB,MAAxB;AACAF,EAAAA,SAAS,CAACC,KAAV,CAAgBE,MAAhB,GAAyB,KAAzB;AACAN,EAAAA,KAAK,CAACO,WAAN,CAAkBJ,SAAlB;AACAH,EAAAA,KAAK,CAACQ,GAAN,GAAY,KAAZ;AACAR,EAAAA,KAAK,CAACI,KAAN,CAAYK,QAAZ,GAAuB,MAAvB;AACAT,EAAAA,KAAK,CAACI,KAAN,CAAYC,KAAZ,GAAoB,KAApB;AACAL,EAAAA,KAAK,CAACI,KAAN,CAAYE,MAAZ,GAAqB,KAArB;AACAN,EAAAA,KAAK,CAACI,KAAN,CAAYM,QAAZ,GAAuB,UAAvB;AACAV,EAAAA,KAAK,CAACI,KAAN,CAAYO,GAAZ,GAAkB,SAAlB;AACAX,EAAAA,KAAK,CAACI,KAAN,CAAYQ,QAAZ,GAAuB,QAAvB;AACAX,EAAAA,QAAQ,CAACY,IAAT,CAAcN,WAAd,CAA0BP,KAA1B;AACAD,EAAAA,UAAU,GAAG,SAAb;;AAEA,MAAIC,KAAK,CAACc,UAAN,GAAmB,CAAvB,EAA0B;AACxBf,IAAAA,UAAU,GAAG,SAAb;AACD,GAFD,MAEO;AACLC,IAAAA,KAAK,CAACc,UAAN,GAAmB,CAAnB;;AAEA,QAAId,KAAK,CAACc,UAAN,KAAqB,CAAzB,EAA4B;AAC1Bf,MAAAA,UAAU,GAAG,UAAb;AACD;AACF;;AAEDE,EAAAA,QAAQ,CAACY,IAAT,CAAcE,WAAd,CAA0Bf,KAA1B;AACA,SAAOD,UAAP;AACD,C,CAAC;;;AAGF,SAASD,uBAAT,CAAiCkB,OAAjC,EAA0CC,SAA1C,EAAqD;AACnD,MAAIH,UAAU,GAAGE,OAAO,CAACF,UAAzB,CADmD,CACd;;AAErC,MAAIG,SAAS,KAAK,KAAlB,EAAyB;AACvB,WAAOH,UAAP;AACD;;AAED,MAAII,IAAI,GAAGrB,gBAAgB,EAA3B;;AAEA,UAAQqB,IAAR;AACE,SAAK,UAAL;AACE,aAAOF,OAAO,CAACG,WAAR,GAAsBH,OAAO,CAACI,WAA9B,GAA4CN,UAAnD;;AAEF,SAAK,SAAL;AACE,aAAOE,OAAO,CAACG,WAAR,GAAsBH,OAAO,CAACI,WAA9B,GAA4CN,UAAnD;;AAEF;AACE,aAAOA,UAAP;AARJ;AAUD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectScrollType = detectScrollType;\nexports.getNormalizedScrollLeft = getNormalizedScrollLeft;\n// Source from https://github.com/alitaheri/normalize-scroll-left\nvar cachedType;\n/**\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n *\n * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.\n *\n * Type             | <- Most Left | Most Right -> | Initial\n * ---------------- | ------------ | ------------- | -------\n * default          | 0            | 100           | 100\n * negative (spec*) | -100         | 0             | 0\n * reverse          | 100          | 0             | 0\n *\n * Edge 85: default\n * Safari 14: negative\n * Chrome 85: negative\n * Firefox 81: negative\n * IE 11: reverse\n *\n * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll\n */\n\nfunction detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n\n  var dummy = document.createElement('div');\n  var container = document.createElement('div');\n  container.style.width = '10px';\n  container.style.height = '1px';\n  dummy.appendChild(container);\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n\n  document.body.removeChild(dummy);\n  return cachedType;\n} // Based on https://stackoverflow.com/a/24394376\n\n\nfunction getNormalizedScrollLeft(element, direction) {\n  var scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n\n  var type = detectScrollType();\n\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n\n    default:\n      return scrollLeft;\n  }\n}"]},"metadata":{},"sourceType":"script"}