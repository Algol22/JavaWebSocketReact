{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usher\\\\Desktop\\\\chat\\\\ChatApplication\\\\react-client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Client } from '@stomp/stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'ws://localhost:8080/ws-message';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: 'You server message here.'\n    };\n  }\n\n  componentDidMount() {\n    let currentComponent = this;\n\n    let onConnected = () => {\n      console.log(\"Connected!!\");\n      client.subscribe('/topic/message', function (msg) {\n        if (msg.body) {\n          var jsonBody = JSON.parse(msg.body);\n\n          if (jsonBody.message) {\n            currentComponent.setState({\n              messages: jsonBody.message\n            });\n          }\n        }\n      });\n    };\n\n    let onDisconnected = () => {\n      console.log(\"Disconnected!!\");\n    };\n\n    const client = new Client({\n      brokerURL: SOCKET_URL,\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      onConnect: onConnected,\n      onDisconnect: onDisconnected\n    });\n    client.activate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/usher/Desktop/chat/ChatApplication/react-client/src/App.js"],"names":["React","Client","SOCKET_URL","App","Component","constructor","state","messages","componentDidMount","currentComponent","onConnected","console","log","client","subscribe","msg","body","jsonBody","JSON","parse","message","setState","onDisconnected","brokerURL","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","onDisconnect","activate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,MAAMC,UAAU,GAAG,gCAAnB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,gBAAgB,GAAG,IAAvB;;AACA,QAAIC,WAAW,GAAG,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAC,MAAAA,MAAM,CAACC,SAAP,CAAiB,gBAAjB,EAAmC,UAAUC,GAAV,EAAe;AAChD,YAAIA,GAAG,CAACC,IAAR,EAAc;AACZ,cAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACC,IAAf,CAAf;;AACA,cAAIC,QAAQ,CAACG,OAAb,EAAsB;AACpBX,YAAAA,gBAAgB,CAACY,QAAjB,CAA0B;AAAEd,cAAAA,QAAQ,EAAEU,QAAQ,CAACG;AAArB,aAA1B;AACD;AACF;AACF,OAPD;AAQD,KAVD;;AAYA,QAAIE,cAAc,GAAG,MAAM;AACzBX,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAFD;;AAIA,UAAMC,MAAM,GAAG,IAAIZ,MAAJ,CAAW;AACxBsB,MAAAA,SAAS,EAAErB,UADa;AAExBsB,MAAAA,cAAc,EAAE,IAFQ;AAGxBC,MAAAA,iBAAiB,EAAE,IAHK;AAIxBC,MAAAA,iBAAiB,EAAE,IAJK;AAKxBC,MAAAA,SAAS,EAAEjB,WALa;AAMxBkB,MAAAA,YAAY,EAAEN;AANU,KAAX,CAAf;AASAT,IAAAA,MAAM,CAACgB,QAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,kBAAM,KAAKxB,KAAL,CAAWC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA5C+B;;AAgDlC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\r\nimport { Client } from '@stomp/stompjs';\r\n\r\nconst SOCKET_URL = 'ws://localhost:8080/ws-message';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messages: 'You server message here.',\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    let currentComponent = this;\r\n    let onConnected = () => {\r\n      console.log(\"Connected!!\")\r\n      client.subscribe('/topic/message', function (msg) {\r\n        if (msg.body) {\r\n          var jsonBody = JSON.parse(msg.body);\r\n          if (jsonBody.message) {\r\n            currentComponent.setState({ messages: jsonBody.message })\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    let onDisconnected = () => {\r\n      console.log(\"Disconnected!!\")\r\n    }\r\n\r\n    const client = new Client({\r\n      brokerURL: SOCKET_URL,\r\n      reconnectDelay: 5000,\r\n      heartbeatIncoming: 4000,\r\n      heartbeatOutgoing: 4000,\r\n      onConnect: onConnected,\r\n      onDisconnect: onDisconnected\r\n    });\r\n\r\n    client.activate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>{this.state.messages}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}