{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usher\\\\Desktop\\\\chat\\\\ChatApplication\\\\react-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, IconButton, Modal, Button, List, ListItem, ListItemText, ListItemAvatar, Avatar, Typography } from '@material-ui/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [modalOpen, setModalOpen] = useState(true);\n  const [stompClient, setStompClient] = useState(null);\n  useEffect(() => {\n    const socket = new SockJS('http://localhost:8080/ws');\n    const client = Stomp.over(socket);\n    client.connect({}, () => {\n      client.subscribe('/topic/messages', message => {\n        const receivedMessage = JSON.parse(message.body);\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      });\n    });\n    setStompClient(client);\n    return () => {\n      client.disconnect();\n    };\n  }, []);\n\n  const handleNicknameChange = event => {\n    setNickname(event.target.value);\n  };\n\n  const handleModalClose = () => {\n    if (nickname.trim()) {\n      setModalOpen(false);\n    }\n  };\n\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const sendMessage = () => {\n    if (message.trim()) {\n      const chatMessage = {\n        nickname,\n        content: message\n      };\n      stompClient.send('/app/chat', {}, JSON.stringify(chatMessage));\n      setMessage('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleModalClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Enter your nickname\",\n          value: nickname,\n          onChange: handleNicknameChange,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleModalClose,\n          children: \"Enter Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: msg.nickname.charAt(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: msg.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this),\n          secondary: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Type a message\",\n        value: message,\n        onChange: handleMessageChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: sendMessage,\n        disabled: !message.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"zstQzXHlMWOXSrFtGat8d69vx+s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/usher/Desktop/chat/ChatApplication/react-client/src/App.js"],"names":["React","useState","useEffect","TextField","IconButton","Modal","Button","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","Stomp","SockJS","App","messages","setMessages","message","setMessage","nickname","setNickname","modalOpen","setModalOpen","stompClient","setStompClient","socket","client","over","connect","subscribe","receivedMessage","JSON","parse","body","prevMessages","disconnect","handleNicknameChange","event","target","value","handleModalClose","trim","handleMessageChange","sendMessage","chatMessage","content","send","stringify","map","msg","index","charAt","display","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  IconButton,\r\n  Modal,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport Stomp from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [nickname, setNickname] = useState('');\r\n  const [modalOpen, setModalOpen] = useState(true);\r\n  const [stompClient, setStompClient] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = new SockJS('http://localhost:8080/ws');\r\n    const client = Stomp.over(socket);\r\n\r\n    client.connect({}, () => {\r\n      client.subscribe('/topic/messages', (message) => {\r\n        const receivedMessage = JSON.parse(message.body);\r\n        setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n      });\r\n    });\r\n\r\n    setStompClient(client);\r\n\r\n    return () => {\r\n      client.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleNicknameChange = (event) => {\r\n    setNickname(event.target.value);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    if (nickname.trim()) {\r\n      setModalOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleMessageChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      const chatMessage = {\r\n        nickname,\r\n        content: message,\r\n      };\r\n\r\n      stompClient.send('/app/chat', {}, JSON.stringify(chatMessage));\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal open={modalOpen} onClose={handleModalClose}>\r\n        <div>\r\n          <TextField\r\n            placeholder=\"Enter your nickname\"\r\n            value={nickname}\r\n            onChange={handleNicknameChange}\r\n            autoFocus\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleModalClose}>\r\n            Enter Chat\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n\r\n      <List>\r\n        {messages.map((msg, index) => (\r\n          <ListItem key={index}>\r\n            <ListItemAvatar>\r\n              <Avatar>{msg.nickname.charAt(0)}</Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={\r\n                <Typography variant=\"subtitle1\">{msg.nickname}</Typography>\r\n              }\r\n              secondary={msg.content}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <TextField\r\n          placeholder=\"Type a message\"\r\n          value={message}\r\n          onChange={handleMessageChange}\r\n          fullWidth\r\n        />\r\n        <IconButton onClick={sendMessage} disabled={!message.trim()}>\r\n          Send\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}